TMUX_PLUGIN_MANAGER_PATH=~/.tmux/plugins

#set -g prefix C-a
#bind-key C-a send-prefix
#unbind-key C-b

# Quality of life stuff
set -g allow-rename off
set -g display-panes-time 5000
setw -g aggressive-resize on
bind-key C-l send-keys C-l

# remap horizontal and vertial split to h and v respectively
unbind-key %
bind-key h split-window -h
unbind-key '"'
bind-key v split-window -v

# smart pane switching with awareness of vim splits
unbind-key Up
unbind-key Down
unbind-key Left
unbind-key Right
# vim-tmux-navigator sets up the new ones

#is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
#bind-key -r -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
#bind-key -r -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
#bind-key -r -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
#bind-key -r -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
#bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
#bind-key -T copy-mode-vi C-h select-pane -L
#bind-key -T copy-mode-vi C-j select-pane -D
#bind-key -T copy-mode-vi C-k select-pane -U
#bind-key -T copy-mode-vi C-l select-pane -R
#bind-key -T copy-mode-vi C-\ select-pane -l

#unbind-key C-h
#bind-key -r -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
#unbind-key C-j
#bind-key -r -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
#unbind-key C-k
#bind-key -r -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
#unbind-key C-l
#bind-key -r -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
#unbind-key C-\
#bind-key -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l""')"

# Pane resizing
#     - I tried to mimic as close as possible what the winresizer plugin is doing in vim.
#     - The mouse can also be use to resize tmux panes.
unbind-key C-Up
unbind-key C-Down
unbind-key C-Left
unbind-key C-Right
unbind-key M-Up
unbind-key M-Down
unbind-key M-Left
unbind-key M-Right
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-e if-shell "$is_vim" "send-keys C-e" "switch-client -Ttable1"
bind-key -r -TcustomTable1 h resize-pane -L
bind-key -r -TcustomTable1 j resize-pane -D
bind-key -r -TcustomTable1 k resize-pane -U
bind-key -r -TcustomTable1 l resize-pane -R

## Join Windows
#bind-key j command-prompt -p "join pane from:" "join-pane -s '%%'"
#bind-key s command-prompt -p "join pane to:" "join-pane -t '%%'"

# Search Mode VI
#set-window-option -g mode-keys vi

#setw -g monitor-activity on

# Mouse/Clipboard support --------------------------------------
set -g mouse on
# Use system clipboard
set -g set-clipboard external

if-shell -b 'test $(uname) = "Darwin"' 'bind-key -n MouseDown2Pane run-shell -b "pbpaste | tmux load-buffer \; tmux paste-buffer"'
if-shell -b 'test $(uname) = "Linux"' 'bind-key -n MouseDown2Pane run-shell -b "tmux set-buffer \"$( xclip -se c -o )\" \; tmux paste-buffer"'
bind-key -T copy-mode-vi WheelUpPane send -X scroll-up
bind-key -T copy-mode-vi WheelDownPane send -X scroll-down

# Create Vim like bindings for copy and paste
setw -g mode-keys vi
if-shell -b 'test $(uname) = "Darwin"' 'bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy" \; display-message "highlighted selection copied to system clipboard"'
if-shell -b 'test $(uname) = "Linux"' 'bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -se c -i" \; display-message "highlighted selection copied to system clipboard"'
if-shell -b 'test $(uname) = "Darwin"' 'bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy" \; display-message "highlighted selection copied to system clipboard"'
if-shell -b 'test $(uname) = "Linux"' 'bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -se c -i" \; display-message "highlighted selection copied to system clipboard"'
#unbind-key C-v
if-shell -b 'test $(uname) = "Darwin"' 'bind-key -n C-v run-shell -b "pbpaste | tmux load-buffer \; tmux paste-buffer"'
if-shell -b 'test $(uname) = "Linux"' 'bind-key -n C-v run-shell -b "tmux set-buffer \"$( xclip -se c -o )\" \; tmux paste-buffer"'
# End Mouse/Clipboard support --------------------------------------------

# Shift arrow to switch windows
# no point, tmux-sensible just turns this back on
#unbind-key C-p
unbind-key p
bind-key -n S-Left  previous-window
# no point, tmux-sensible just turns this back on
#unbind-key C-n
unbind-key n
unbind-key M-n
bind-key -n S-Right next-window

# Enter copy mode using Esc
unbind-key [
bind-key Escape copy-mode

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'christoomey/vim-tmux-navigator'
#set -g @plugin 'tmux-plugins/tmux-yank'
#set -g @plugin 'tmux-plugins/tmux-resurrect'
#set -g @plugin 'tmux-plugins/tmux-continuum'
#set -g @plugin 'tmux-plugins/tmux-sessionist'
#set -g @plugin 'tmux-plugins/tmux-pain-control'

# Set tmux theme
set -g @plugin 'jimeh/tmux-themepack'
set -g @themepack 'basic'
#set -g pane-active-border-fg blue
#set -g @plugin 'seebi/tmux-colors-solarized'
#set -g @colors-solarized 'dark'

# continuum settings
#set -g @continuum-restore 'on'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'

