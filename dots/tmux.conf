#set -g prefix C-b
#set -g prefix C-a
#bind C-a send-prefix
#unbind C-b

# remap horizontal and vertial split to h and v respectively
bind v split-window -h
bind h split-window -v

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
#bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l""')"

# Quality of life stuff
#set -g history-limit 10000
#set -g allow-rename off

## Join Windows
bind-key j command-prompt -p "join pane from:" "join-pane -s '%%'"
bind-key s command-prompt -p "join pane to:" "join-pane -t '%%'"

# Search Mode VI
#set-window-option -g mode-keys vi

#setw -g monitor-activity on

# Mouse support ------------------------------------------------
set -g mouse on

bind -T root MouseUp2Pane paste
bind-key -T copy-mode-vi WheelUpPane send -X scroll-up
bind-key -T copy-mode-vi WheelDownPane send -X scroll-down

# Create Vim like bindings for copy and paste
setw -g mode-keys vi
if-shell -b 'test $(uname) = "Darwin"' 'bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy" \; display-message "highlighted selection copied to system clipboard"'
if-shell -b 'test $(uname) = "Darwin"' 'bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy" \; display-message "highlighted selection copied to system clipboard"'
if-shell -b 'test $(uname) = "Linux"' 'bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -se c -i" \; display-message "highlighted selection copied to system clipboard"'
if-shell -b 'test $(uname) = "Linux"' 'bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -se c -i" \; display-message "highlighted selection copied to system clipboard"'
#bind C-p run "tmux set-buffer \"$(xclip -se c -o)\"; tmux paste-buffer
# End Mouse support --------------------------------------------

# Use system clipboard
#set -g set-clipboard external

# Reload Tmux file
#bind r source-file ~/.tmux.conf

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

#set -s escape-time 0

# Enter copy mode using Esc
unbind [
bind Escape copy-mode

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
#set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'jimeh/tmux-themepack'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Set tmux theme
set -g @themepack 'powerline/block/cyan'

# continuum settings
set -g @continuum-restore 'on'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
